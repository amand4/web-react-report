{"ast":null,"code":"var _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/hooks/AuthContext.js\";\nimport axios from \"axios\";\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport api from \"../services/api\";\nconst AuthContext = createContext({});\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n};\n\nconst AuthProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const dataKey = \"@AppReportVehicle:token\";\n  const [user, setUser] = useState({});\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem(dataKey);\n\n    if (token) {\n      return {\n        token\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async _ref2 => {\n    let {\n      name,\n      password\n    } = _ref2;\n    const response = await api.post(\"/login\", {\n      name,\n      password\n    });\n    const {\n      token\n    } = response.data;\n    localStorage.setItem(dataKey, token);\n    setUser;\n    setData(response.data);\n    console.log(data);\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem(dataKey);\n    setData();\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      signIn,\n      signOut,\n      token: data.token\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/hooks/AuthContext.js"],"names":["axios","React","createContext","useCallback","useContext","useState","api","AuthContext","useAuth","context","Error","AuthProvider","children","dataKey","user","setUser","data","setData","token","localStorage","getItem","signIn","name","password","response","post","setItem","console","log","signOut","removeItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,MAAMC,WAAW,GAAGL,aAAa,CAAC,EAAD,CAAjC;;AAEA,MAAMM,OAAO,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAGL,UAAU,CAACG,WAAD,CAA1B;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD,CAPD;;AASA,MAAME,YAAY,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAMC,OAAO,GAAG,yBAAhB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,MAAM;AACrC,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBP,OAArB,CAAd;;AAEA,QAAIK,KAAJ,EAAW;AACT,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GAR+B,CAAhC;AAUA,QAAMG,MAAM,GAAGlB,WAAW,CAAC,eAA8B;AAAA,QAAvB;AAAEmB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAuB;AACvD,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,QAAT,EAAmB;AACxCH,MAAAA,IADwC;AAExCC,MAAAA;AAFwC,KAAnB,CAAvB;AAKA,UAAM;AAAEL,MAAAA;AAAF,QAAYM,QAAQ,CAACR,IAA3B;AAEAG,IAAAA,YAAY,CAACO,OAAb,CAAqBb,OAArB,EAA8BK,KAA9B;AACAH,IAAAA,OAAO;AACPE,IAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,GAbyB,EAavB,EAbuB,CAA1B;AAeA,QAAMa,OAAO,GAAG1B,WAAW,CAAC,MAAM;AAChCgB,IAAAA,YAAY,CAACW,UAAb,CAAwBjB,OAAxB;AAEAI,IAAAA,OAAO;AACR,GAJ0B,EAIxB,EAJwB,CAA3B;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,MADK;AAELQ,MAAAA,OAFK;AAGLX,MAAAA,KAAK,EAAEF,IAAI,CAACE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,QAPH,CADF;AAWD,CA7CD;;AA+CA,SAASD,YAAT,EAAuBH,OAAvB","sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport api from \"../services/api\";\n\nconst AuthContext = createContext({});\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n};\n\nconst AuthProvider = ({ children }) => {\n  const dataKey = \"@AppReportVehicle:token\";\n  const [user, setUser] = useState({});\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem(dataKey);\n\n    if (token) {\n      return { token };\n    }\n\n    return {};\n  });\n\n  const signIn = useCallback(async ({ name, password }) => {\n    const response = await api.post(\"/login\", {\n      name,\n      password,\n    });\n\n    const { token } = response.data;\n\n    localStorage.setItem(dataKey, token);\n    setUser\n    setData(response.data);\n\n    console.log(data);\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem(dataKey);\n\n    setData();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signIn,\n        signOut,\n        token: data.token,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}