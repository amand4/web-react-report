{"ast":null,"code":"var _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/pages/Login/index.jsx\";\nimport React, { useState } from \"react\";\nimport logo from \"../../assets/Logo.svg\";\nimport \"./styles.css\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nexport default function Login() {\n  const Schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    password: yup.string().required(\"Campo obrigatório\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isDirty,\n      isValid\n    }\n  } = useForm({\n    resolver: yupResolver(Schema),\n    mode: \"onChange\"\n  });\n  const [name, setname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(true);\n  const {\n    signIn\n  } = useAuth();\n\n  async function onSubmit() {\n    setLoading(true);\n    signIn({\n      name,\n      password\n    }).then(response => {\n      setLoading(false);\n      toast.success(\"Logado com sucesso\");\n    }).catch(err => {\n      setLoading(false);\n      toast.error(\"Usário ou senha inválida! Tente novamente com outras credênciais\");\n    });\n  }\n\n  if (signIn) {\n    localStorage.clear();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-login text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    id: \"logo-login\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(handleonSubmitSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    size: 85,\n    className: \"login\",\n    type: \"name\",\n    id: \"name\",\n    required: true,\n    placeholder: \"perito@policiacientifica.com.br\",\n    onChange: event => setname(event.target.value),\n    value: name,\n    errors: errors,\n    register: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login\",\n    type: \"password\",\n    required: true,\n    id: \"password\",\n    placeholder: \"******\",\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    errors: errors,\n    register: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg\",\n    greySchema: true,\n    isDirty: true,\n    isValid: true,\n    onClick: () => setLoading(!loading),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"ENTRAR\")))));\n}","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/pages/Login/index.jsx"],"names":["React","useState","useAuth","toast","yup","yupResolver","Login","Schema","object","shape","name","string","required","password","register","handleSubmit","formState","errors","isDirty","isValid","useForm","resolver","mode","setname","setPassword","loading","setLoading","signIn","onSubmit","then","response","success","catch","err","error","localStorage","clear","logo","handleonSubmitSubmit","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"../../assets/Logo.svg\";\nimport \"./styles.css\";\nimport { useAuth } from \"../../hooks/AuthContext\";\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nexport default function Login() {\n  const Schema = yup.object().shape({\n    name: yup.string().required(\"Campo obrigatório\"),\n    password: yup.string().required(\"Campo obrigatório\"),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    resolver: yupResolver(Schema),\n    mode: \"onChange\",\n  });\n\n  const [name, setname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let [loading, setLoading] = useState(true);\n  const { signIn } = useAuth();\n\n  async function onSubmit() {\n    setLoading(true);\n    signIn({ name, password })\n      .then((response) => {\n        setLoading(false);\n        toast.success(\"Logado com sucesso\");\n      })\n      .catch((err) => {\n        setLoading(false);\n        toast.error(\n          \"Usário ou senha inválida! Tente novamente com outras credênciais\"\n        );\n      });\n  }\n  if (signIn) {\n    localStorage.clear();\n  }\n  return (\n    <div className=\"container-login text-center \">\n      <img src={logo} id=\"logo-login\" alt=\"Logo\" />\n\n      <form onSubmit={handleSubmit(handleonSubmitSubmit)}>\n        <div className=\"form-login\">\n          <label id=\"password\">\n            <input\n              size={85}\n              className=\"login\"\n              type=\"name\"\n              id=\"name\"\n              required\n              placeholder=\"perito@policiacientifica.com.br\"\n              onChange={(event) => setname(event.target.value)}\n              value={name}\n              errors={errors}\n              register={register}\n            />\n          </label>\n          <label>\n            <input\n              className=\"login\"\n              type=\"password\"\n              required\n              id=\"password\"\n              placeholder=\"******\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n              errors={errors}\n              register={register}\n            />\n          </label>\n          <div>\n            <button\n              className=\"btn btn-lg\"\n              greySchema\n              isDirty={true}\n              isValid={true}\n              onClick={() => setLoading(!loading)}\n              type=\"submit\"\n            >\n              ENTRAR\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}