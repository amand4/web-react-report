{"ast":null,"code":"var _jsxFileName = \"/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/hooks/AuthContext.js\";\nimport axios from \"axios\";\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport api from \"../services/api\";\nconst AuthContext = createContext({});\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n};\n\nconst AuthProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const dataKey = \"@AppReportVehicle:token\";\n  const userStorageKey = \"@AppReportVehicle:user\";\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem(dataKey);\n    const user = localStorage.getItem(dataKey);\n    const userConverted = JSON.parse(user);\n\n    if (token) {\n      return {\n        token: token,\n        user: userConverted\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async _ref2 => {\n    let {\n      name,\n      password\n    } = _ref2;\n    const response = await api.post(\"/login\", {\n      name,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    const userLogado = {\n      name: user.name,\n      id: user.id\n    };\n    localStorage.setItem(dataKey, token);\n    localStorage.setItem(userStorageKey, JSON.stringify(userLogado));\n    setData({\n      token: token,\n      user: user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem(dataKey);\n    localStorage.removeItem(userStorageKey);\n    setData();\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      signIn,\n      signOut,\n      token: data.token,\n      user: data.user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/amanda-kenzie/Documents/Faculdade/TCC/front/web-react-report/src/hooks/AuthContext.js"],"names":["axios","React","createContext","useCallback","useContext","useState","api","AuthContext","useAuth","context","Error","AuthProvider","children","dataKey","userStorageKey","data","setData","token","localStorage","getItem","user","userConverted","JSON","parse","signIn","name","password","response","post","userLogado","id","setItem","stringify","signOut","removeItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,MAAMC,WAAW,GAAGL,aAAa,CAAC,EAAD,CAAjC;;AAEA,MAAMM,OAAO,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAGL,UAAU,CAACG,WAAD,CAA1B;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD,CAPD;;AASA,MAAME,YAAY,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAMC,OAAO,GAAG,yBAAhB;AACA,QAAMC,cAAc,GAAG,wBAAvB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAM;AACrC,UAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBN,OAArB,CAAd;AACA,UAAMO,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqBN,OAArB,CAAb;AACA,UAAMQ,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAtB;;AACA,QAAIH,KAAJ,EAAW;AACT,aAAO;AAAEA,QAAAA,KAAK,EAAEA,KAAT;AAAgBG,QAAAA,IAAI,EAAEC;AAAtB,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GAT+B,CAAhC;AAWA,QAAMG,MAAM,GAAGrB,WAAW,CAAC,eAA8B;AAAA,QAAvB;AAAEsB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAuB;AACvD,UAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAJ,CAAS,QAAT,EAAmB;AACxCH,MAAAA,IADwC;AAExCC,MAAAA;AAFwC,KAAnB,CAAvB;AAKA,UAAM;AAAET,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAkBO,QAAQ,CAACZ,IAAjC;AAEA,UAAMc,UAAU,GAAG;AACjBJ,MAAAA,IAAI,EAAEL,IAAI,CAACK,IADM;AAEjBK,MAAAA,EAAE,EAAEV,IAAI,CAACU;AAFQ,KAAnB;AAIAZ,IAAAA,YAAY,CAACa,OAAb,CAAqBlB,OAArB,EAA8BI,KAA9B;AACAC,IAAAA,YAAY,CAACa,OAAb,CAAqBjB,cAArB,EAAqCQ,IAAI,CAACU,SAAL,CAAeH,UAAf,CAArC;AAEAb,IAAAA,OAAO,CAAC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,IAAI,EAAEA;AAAtB,KAAD,CAAP;AACD,GAhByB,EAgBvB,EAhBuB,CAA1B;AAkBA,QAAMa,OAAO,GAAG9B,WAAW,CAAC,MAAM;AAChCe,IAAAA,YAAY,CAACgB,UAAb,CAAwBrB,OAAxB;AACAK,IAAAA,YAAY,CAACgB,UAAb,CAAwBpB,cAAxB;AAEAE,IAAAA,OAAO;AACR,GAL0B,EAKxB,EALwB,CAA3B;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MADK;AAELS,MAAAA,OAFK;AAGLhB,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAHP;AAILG,MAAAA,IAAI,EAAEL,IAAI,CAACK;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGR,QARH,CADF;AAYD,CAnDD;;AAqDA,SAASD,YAAT,EAAuBH,OAAvB","sourcesContent":["import axios from \"axios\";\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport api from \"../services/api\";\n\nconst AuthContext = createContext({});\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n};\n\nconst AuthProvider = ({ children }) => {\n  const dataKey = \"@AppReportVehicle:token\";\n  const userStorageKey = \"@AppReportVehicle:user\";\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem(dataKey);\n    const user = localStorage.getItem(dataKey);\n    const userConverted = JSON.parse(user);\n    if (token) {\n      return { token: token, user: userConverted };\n    }\n\n    return {};\n  });\n\n  const signIn = useCallback(async ({ name, password }) => {\n    const response = await api.post(\"/login\", {\n      name,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    const userLogado = {\n      name: user.name,\n      id: user.id,\n    };\n    localStorage.setItem(dataKey, token);\n    localStorage.setItem(userStorageKey, JSON.stringify(userLogado));\n\n    setData({ token: token, user: user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem(dataKey);\n    localStorage.removeItem(userStorageKey);\n\n    setData();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signIn,\n        signOut,\n        token: data.token,\n        user: data.user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}